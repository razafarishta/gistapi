{"ast":null,"code":"import { endpoint } from '@octokit/endpoint';\nimport { getUserAgent } from 'universal-user-agent';\nimport { isPlainObject } from 'is-plain-object';\nimport nodeFetch from 'node-fetch';\nimport { RequestError } from '@octokit/request-error';\nconst VERSION = \"5.6.3\";\nfunction getBufferResponse(response) {\n  return response.arrayBuffer();\n}\nfunction fetchWrapper(requestOptions) {\n  const log = requestOptions.request && requestOptions.request.log ? requestOptions.request.log : console;\n  if (isPlainObject(requestOptions.body) || Array.isArray(requestOptions.body)) {\n    requestOptions.body = JSON.stringify(requestOptions.body);\n  }\n  let headers = {};\n  let status;\n  let url;\n  const fetch = requestOptions.request && requestOptions.request.fetch || nodeFetch;\n  return fetch(requestOptions.url, Object.assign({\n    method: requestOptions.method,\n    body: requestOptions.body,\n    headers: requestOptions.headers,\n    redirect: requestOptions.redirect\n  },\n  // `requestOptions.request.agent` type is incompatible\n  // see https://github.com/octokit/types.ts/pull/264\n  requestOptions.request)).then(async response => {\n    url = response.url;\n    status = response.status;\n    for (const keyAndValue of response.headers) {\n      headers[keyAndValue[0]] = keyAndValue[1];\n    }\n    if (\"deprecation\" in headers) {\n      const matches = headers.link && headers.link.match(/<([^>]+)>; rel=\"deprecation\"/);\n      const deprecationLink = matches && matches.pop();\n      log.warn(`[@octokit/request] \"${requestOptions.method} ${requestOptions.url}\" is deprecated. It is scheduled to be removed on ${headers.sunset}${deprecationLink ? `. See ${deprecationLink}` : \"\"}`);\n    }\n    if (status === 204 || status === 205) {\n      return;\n    }\n    // GitHub API returns 200 for HEAD requests\n    if (requestOptions.method === \"HEAD\") {\n      if (status < 400) {\n        return;\n      }\n      throw new RequestError(response.statusText, status, {\n        response: {\n          url,\n          status,\n          headers,\n          data: undefined\n        },\n        request: requestOptions\n      });\n    }\n    if (status === 304) {\n      throw new RequestError(\"Not modified\", status, {\n        response: {\n          url,\n          status,\n          headers,\n          data: await getResponseData(response)\n        },\n        request: requestOptions\n      });\n    }\n    if (status >= 400) {\n      const data = await getResponseData(response);\n      const error = new RequestError(toErrorMessage(data), status, {\n        response: {\n          url,\n          status,\n          headers,\n          data\n        },\n        request: requestOptions\n      });\n      throw error;\n    }\n    return getResponseData(response);\n  }).then(data => {\n    return {\n      status,\n      url,\n      headers,\n      data\n    };\n  }).catch(error => {\n    if (error instanceof RequestError) throw error;\n    throw new RequestError(error.message, 500, {\n      request: requestOptions\n    });\n  });\n}\nasync function getResponseData(response) {\n  const contentType = response.headers.get(\"content-type\");\n  if (/application\\/json/.test(contentType)) {\n    return response.json();\n  }\n  if (!contentType || /^text\\/|charset=utf-8$/.test(contentType)) {\n    return response.text();\n  }\n  return getBufferResponse(response);\n}\nfunction toErrorMessage(data) {\n  if (typeof data === \"string\") return data;\n  // istanbul ignore else - just in case\n  if (\"message\" in data) {\n    if (Array.isArray(data.errors)) {\n      return `${data.message}: ${data.errors.map(JSON.stringify).join(\", \")}`;\n    }\n    return data.message;\n  }\n  // istanbul ignore next - just in case\n  return `Unknown error: ${JSON.stringify(data)}`;\n}\nfunction withDefaults(oldEndpoint, newDefaults) {\n  const endpoint = oldEndpoint.defaults(newDefaults);\n  const newApi = function (route, parameters) {\n    const endpointOptions = endpoint.merge(route, parameters);\n    if (!endpointOptions.request || !endpointOptions.request.hook) {\n      return fetchWrapper(endpoint.parse(endpointOptions));\n    }\n    const request = (route, parameters) => {\n      return fetchWrapper(endpoint.parse(endpoint.merge(route, parameters)));\n    };\n    Object.assign(request, {\n      endpoint,\n      defaults: withDefaults.bind(null, endpoint)\n    });\n    return endpointOptions.request.hook(request, endpointOptions);\n  };\n  return Object.assign(newApi, {\n    endpoint,\n    defaults: withDefaults.bind(null, endpoint)\n  });\n}\nconst request = withDefaults(endpoint, {\n  headers: {\n    \"user-agent\": `octokit-request.js/${VERSION} ${getUserAgent()}`\n  }\n});\nexport { request };","map":{"version":3,"sources":["../dist-src/version.js","../dist-src/get-buffer-response.js","../dist-src/fetch-wrapper.js","../dist-src/with-defaults.js","../dist-src/index.js"],"names":["getBuffer"],"mappings":"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","sourcesContent":["export const VERSION = \"5.6.3\";\n","export default function getBufferResponse(response) {\n    return response.arrayBuffer();\n}\n","import { isPlainObject } from \"is-plain-object\";\nimport nodeFetch from \"node-fetch\";\nimport { RequestError } from \"@octokit/request-error\";\nimport getBuffer from \"./get-buffer-response\";\nexport default function fetchWrapper(requestOptions) {\n    const log = requestOptions.request && requestOptions.request.log\n        ? requestOptions.request.log\n        : console;\n    if (isPlainObject(requestOptions.body) ||\n        Array.isArray(requestOptions.body)) {\n        requestOptions.body = JSON.stringify(requestOptions.body);\n    }\n    let headers = {};\n    let status;\n    let url;\n    const fetch = (requestOptions.request && requestOptions.request.fetch) || nodeFetch;\n    return fetch(requestOptions.url, Object.assign({\n        method: requestOptions.method,\n        body: requestOptions.body,\n        headers: requestOptions.headers,\n        redirect: requestOptions.redirect,\n    }, \n    // `requestOptions.request.agent` type is incompatible\n    // see https://github.com/octokit/types.ts/pull/264\n    requestOptions.request))\n        .then(async (response) => {\n        url = response.url;\n        status = response.status;\n        for (const keyAndValue of response.headers) {\n            headers[keyAndValue[0]] = keyAndValue[1];\n        }\n        if (\"deprecation\" in headers) {\n            const matches = headers.link && headers.link.match(/<([^>]+)>; rel=\"deprecation\"/);\n            const deprecationLink = matches && matches.pop();\n            log.warn(`[@octokit/request] \"${requestOptions.method} ${requestOptions.url}\" is deprecated. It is scheduled to be removed on ${headers.sunset}${deprecationLink ? `. See ${deprecationLink}` : \"\"}`);\n        }\n        if (status === 204 || status === 205) {\n            return;\n        }\n        // GitHub API returns 200 for HEAD requests\n        if (requestOptions.method === \"HEAD\") {\n            if (status < 400) {\n                return;\n            }\n            throw new RequestError(response.statusText, status, {\n                response: {\n                    url,\n                    status,\n                    headers,\n                    data: undefined,\n                },\n                request: requestOptions,\n            });\n        }\n        if (status === 304) {\n            throw new RequestError(\"Not modified\", status, {\n                response: {\n                    url,\n                    status,\n                    headers,\n                    data: await getResponseData(response),\n                },\n                request: requestOptions,\n            });\n        }\n        if (status >= 400) {\n            const data = await getResponseData(response);\n            const error = new RequestError(toErrorMessage(data), status, {\n                response: {\n                    url,\n                    status,\n                    headers,\n                    data,\n                },\n                request: requestOptions,\n            });\n            throw error;\n        }\n        return getResponseData(response);\n    })\n        .then((data) => {\n        return {\n            status,\n            url,\n            headers,\n            data,\n        };\n    })\n        .catch((error) => {\n        if (error instanceof RequestError)\n            throw error;\n        throw new RequestError(error.message, 500, {\n            request: requestOptions,\n        });\n    });\n}\nasync function getResponseData(response) {\n    const contentType = response.headers.get(\"content-type\");\n    if (/application\\/json/.test(contentType)) {\n        return response.json();\n    }\n    if (!contentType || /^text\\/|charset=utf-8$/.test(contentType)) {\n        return response.text();\n    }\n    return getBuffer(response);\n}\nfunction toErrorMessage(data) {\n    if (typeof data === \"string\")\n        return data;\n    // istanbul ignore else - just in case\n    if (\"message\" in data) {\n        if (Array.isArray(data.errors)) {\n            return `${data.message}: ${data.errors.map(JSON.stringify).join(\", \")}`;\n        }\n        return data.message;\n    }\n    // istanbul ignore next - just in case\n    return `Unknown error: ${JSON.stringify(data)}`;\n}\n","import fetchWrapper from \"./fetch-wrapper\";\nexport default function withDefaults(oldEndpoint, newDefaults) {\n    const endpoint = oldEndpoint.defaults(newDefaults);\n    const newApi = function (route, parameters) {\n        const endpointOptions = endpoint.merge(route, parameters);\n        if (!endpointOptions.request || !endpointOptions.request.hook) {\n            return fetchWrapper(endpoint.parse(endpointOptions));\n        }\n        const request = (route, parameters) => {\n            return fetchWrapper(endpoint.parse(endpoint.merge(route, parameters)));\n        };\n        Object.assign(request, {\n            endpoint,\n            defaults: withDefaults.bind(null, endpoint),\n        });\n        return endpointOptions.request.hook(request, endpointOptions);\n    };\n    return Object.assign(newApi, {\n        endpoint,\n        defaults: withDefaults.bind(null, endpoint),\n    });\n}\n","import { endpoint } from \"@octokit/endpoint\";\nimport { getUserAgent } from \"universal-user-agent\";\nimport { VERSION } from \"./version\";\nimport withDefaults from \"./with-defaults\";\nexport const request = withDefaults(endpoint, {\n    headers: {\n        \"user-agent\": `octokit-request.js/${VERSION} ${getUserAgent()}`,\n    },\n});\n"]},"metadata":{},"sourceType":"module"}
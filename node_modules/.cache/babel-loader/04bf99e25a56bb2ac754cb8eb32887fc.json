{"ast":null,"code":"import { Octokit } from \"@octokit/rest\";\nimport ls from \"localstorage-ttl\";\nconst octokit = new Octokit();\nexport const getPublicGists = () => octokit.gists.listPublic();\nexport const getGistForUser = username => {\n  const cachedResponse = ls.get(username);\n  if (cachedResponse) return Promise.resolve(cachedResponse);\n  return octokit.gists.listForUser({\n    username\n  }).then(response => {\n    // ls.set(username, response, 60 * 1000)\n    return response;\n  });\n};","map":{"version":3,"names":["Octokit","ls","octokit","getPublicGists","gists","listPublic","getGistForUser","username","cachedResponse","get","Promise","resolve","listForUser","then","response"],"sources":["/Users/mac/Downloads/gistapi-main/src/services/gistService.js"],"sourcesContent":["import { Octokit } from \"@octokit/rest\";\nimport ls from \"localstorage-ttl\";\n\nconst octokit = new Octokit();\n\nexport const getPublicGists = () => octokit.gists.listPublic();\n\nexport const getGistForUser = (username) => {\n  const cachedResponse = ls.get(username);\n  if (cachedResponse) return Promise.resolve(cachedResponse);\n  return octokit.gists.listForUser({ username }).then((response) => {\n    // ls.set(username, response, 60 * 1000)\n    return response;\n  });\n};\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,eAAe;AACvC,OAAOC,EAAE,MAAM,kBAAkB;AAEjC,MAAMC,OAAO,GAAG,IAAIF,OAAO,CAAC,CAAC;AAE7B,OAAO,MAAMG,cAAc,GAAGA,CAAA,KAAMD,OAAO,CAACE,KAAK,CAACC,UAAU,CAAC,CAAC;AAE9D,OAAO,MAAMC,cAAc,GAAIC,QAAQ,IAAK;EAC1C,MAAMC,cAAc,GAAGP,EAAE,CAACQ,GAAG,CAACF,QAAQ,CAAC;EACvC,IAAIC,cAAc,EAAE,OAAOE,OAAO,CAACC,OAAO,CAACH,cAAc,CAAC;EAC1D,OAAON,OAAO,CAACE,KAAK,CAACQ,WAAW,CAAC;IAAEL;EAAS,CAAC,CAAC,CAACM,IAAI,CAAEC,QAAQ,IAAK;IAChE;IACA,OAAOA,QAAQ;EACjB,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module"}